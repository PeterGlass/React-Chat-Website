{"version":3,"sources":["AuthorizationPage.js","Chat.js","App.js","index.js"],"names":["AuthorizationPage","props","history","welcomeClass","versionClass","accessCodeInput","React","createRef","useState","window","innerHeight","innerWidth","size","setSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","height","width","accessClass","setAccessClass","accessCode","setAccessCode","Math","floor","random","className","onSubmit","event","preventDefault","parseInt","current","value","setCurrentWebsite","type","placeholder","ref","Chat","alias","setAlias","tempAlias","setTempAlias","password","setPassword","message","setMessage","messageLog","setMessageLog","isNewUser","setIsNewUser","isLogin","setIsLogin","hasError","setHasError","errorMessage","setErrorMessage","flexClass","setFlexClass","sessionId","setSessionId","userCount","setUserCount","messagesEndRef","useRef","scrollIntoView","behavior","getMessageLog","setInterval","getUserCount","cleanup","e","console","log","test","endSession","popClass","Axios","get","then","response","data","user_count","startSession","params","session_id","delete","required","onChange","target","onClick","post","disabled","style","map","val","App","currentWebsite","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.827acea8.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './style/AuthorizationPage.css';\r\n\r\nfunction AuthorizationPage(props, {history}) {\r\n    const accessCodeInput = React.createRef();\r\n    const [height, width] = useWindowSize();\r\n    const [accessClass, setAccessClass] = useState('NoAccessDenied');\r\n    const [accessCode, setAccessCode] = useState(0);\r\n\r\n    // sets access code on mount\r\n    useEffect(() => {\r\n      setAccessCode(Math.floor(Math.random()*10000000000));\r\n    }, []);\r\n\r\n    // determines if inputted access code is correct\r\n    function handleSubmit (event) {\r\n      event.preventDefault();\r\n      if(parseInt(accessCodeInput.current.value) === accessCode){\r\n        props.setCurrentWebsite('chat');\r\n      }\r\n      else {\r\n        setAccessClass('AccessDenied');\r\n      }\r\n    }\r\n    \r\n    let welcomeClass;\r\n    let versionClass;\r\n    if(height > 400 && width > 515){\r\n      welcomeClass = 'Welcome';\r\n      versionClass = 'Version';\r\n    }\r\n    else if(height < 310){\r\n      welcomeClass = 'WelcomeMobile'\r\n      versionClass = 'NoVersion'\r\n    }\r\n    else {\r\n      welcomeClass = 'WelcomeMobile'\r\n      versionClass = 'Version'\r\n    }\r\n  \r\n    return (\r\n      <div className='AuthorizationPage'>\r\n        <div className='CenterContainer'>\r\n          <div className={welcomeClass}>This <em>Website</em> is Restricted.</div>\r\n          <div className='Hint'>(Not really though... the access code is hidden somewhere on this website)</div>       \r\n          <form className={'AccessCode'} onSubmit={handleSubmit}>\r\n            <input type='text' placeholder='Access Code' ref={accessCodeInput}/>\r\n            <button>Enter</button>\r\n          </form>\r\n          <div className={accessClass}>Access Denied!</div>\r\n        </div>\r\n        <div className='HiddenCode'>{accessCode}</div>\r\n        <div className={versionClass}>Version:1.1.4 - Updated:6/11/20</div>\r\n      </div>\r\n    )\r\n  \r\n  }\r\n\r\n  function useWindowSize() {\r\n    const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setSize([window.innerHeight, window.innerWidth]);\r\n      };\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n      };\r\n    }, []);\r\n    return size;\r\n  }\r\n\r\n  export default AuthorizationPage;","import React, {useEffect, useState, useRef} from 'react';\r\nimport './style/Chat.css';\r\nimport Axios from 'axios';\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\nfunction Chat(props) {\r\n    const [alias, setAlias] = useState('(None)');\r\n    const [tempAlias, setTempAlias] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageLog, setMessageLog] = useState([]);\r\n    const [isNewUser, setIsNewUser] = useState(false);\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [hasError, setHasError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('test');\r\n    const [flexClass, setFlexClass] = useState('BlurFlexContainer');\r\n    const [sessionId, setSessionId] = useState(0);\r\n    const [userCount, setUserCount] = useState(0);\r\n    const messagesEndRef = useRef(null);\r\n    const [height, width] = useWindowSize();\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    useEffect(scrollToBottom, [messageLog]);\r\n\r\n    useEffect(() => {\r\n        getMessageLog();\r\n        setInterval(getMessageLog, 500);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUserCount();\r\n        setInterval(getUserCount, 500);\r\n    }, []);\r\n\r\n    const cleanup = (e) => {\r\n        e.preventDefault();\r\n        console.log(test);\r\n        endSession();\r\n    }\r\n\r\n    useEffect(() => {\r\n      \r\n        window.addEventListener('beforeunload', cleanup);\r\n      \r\n        return () => window.removeEventListener('beforeunload', cleanup);\r\n        \r\n      }, [cleanup]);\r\n\r\n    const getUserCount = () => {\r\n        Axios.get('http://onlypeters.com/api/getUserCount').then((response) => {\r\n            setUserCount(response.data[0].user_count);\r\n        });\r\n    };\r\n\r\n    const startSession = () => {\r\n        Axios.get('http://onlypeters.com/api/startSession',{\r\n            params: {\r\n                alias: tempAlias\r\n            }\r\n        }).then((response) => {\r\n            setSessionId(response.data[1][0].session_id);\r\n        });\r\n    };\r\n\r\n    const endSession = () => {\r\n        Axios.delete('http://onlypeters.com/api/endSession',{\r\n            data: {\r\n                sessionId: sessionId\r\n            }\r\n        });\r\n        setSessionId(0);\r\n    };\r\n\r\n    const getMessageLog = () => {\r\n        Axios.get(\"http://onlypeters.com/api/getMessage\").then((response) => {\r\n            setMessageLog(response.data);\r\n        });\r\n    };\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://onlypeters.com/api/insertMessage', {\r\n            alias: alias, \r\n            message: message\r\n        });\r\n        setMessage('');\r\n    };\r\n\r\n    const createUser = (e) => {\r\n        e.preventDefault();\r\n        Axios.get(\"http://onlypeters.com/api/isAliasUnique\", {\r\n            params: {\r\n                alias: tempAlias\r\n            }\r\n        }).then((response) => {\r\n            if(response.data){\r\n                if(tempAlias <= 20){ \r\n                    setAlias(tempAlias);\r\n                    setIsLogin(true);\r\n                    startSession();\r\n                    Axios.post(\"http://onlypeters.com/api/insertUser\", {\r\n                        alias: tempAlias,\r\n                        password: password\r\n                    });\r\n                } else {\r\n                    setErrorMessage('Alias must be less than 20 characters.');\r\n                    setHasError(true);\r\n                } \r\n            } else {\r\n                setErrorMessage('Alias has already been taken.');\r\n                setHasError(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const userLogin = (e) => {\r\n        e.preventDefault();\r\n        Axios.get(\"http://onlypeters.com/api/isUserAuth\", {\r\n            params: {\r\n                alias: tempAlias,\r\n                password: password\r\n            }\r\n        }).then((response) => {\r\n            if(response.data){\r\n                setAlias(tempAlias);\r\n                setIsLogin(true);\r\n                startSession();\r\n            } else {\r\n                setErrorMessage('Account credentials are incorrect.');\r\n                setHasError(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const openCreateAlias = () => {\r\n        setIsNewUser(true);\r\n        setHasError(false);\r\n    };\r\n\r\n    const openLogin = () => {\r\n        setIsNewUser(false);\r\n        setHasError(false);\r\n    };\r\n\r\n    const logout = () => {\r\n        setIsLogin(false);\r\n        setAlias(\"(None)\");\r\n        endSession();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(isLogin){\r\n            setFlexClass('FlexContainer');\r\n        } else {\r\n            setFlexClass('BlurFlexContainer');\r\n        }\r\n    },[isLogin]);\r\n\r\n    useEffect(() => {\r\n        if(!hasError){\r\n            setErrorMessage('');\r\n        }\r\n    }, [hasError]);\r\n\r\n    let popClass;\r\n    if(width > 500){\r\n        popClass = 'PopBox';\r\n    } else {\r\n        popClass = 'MobilePopBox';\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {(!isNewUser && !isLogin) && <div className={popClass}>\r\n                <div className='PopMessage'>Use previously created alias and password to login. (Passwords cannot be recovered). </div>\r\n                <form className='PopForm' onSubmit={userLogin}>\r\n                    <input className='AliasInput' required type='text' placeholder='Alias' onChange={(e) => {\r\n                        setTempAlias(e.target.value);\r\n                    }}/><br/>\r\n                    <input className='PasswordInput' type='password' placeholder='Password' onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                    }}/><br/>\r\n                    <button>Login</button>\r\n                </form><br/>\r\n                <button className=\"PopSwitch\" required onClick={openCreateAlias}>Create new alias.</button>\r\n                <div className='Error'>{errorMessage}</div>\r\n            </div>}\r\n\r\n            {(isNewUser && !isLogin) && <div className={popClass}>\r\n            <div className='PopMessage'>Create new alias. Bad passwords will be shamed. (Passwords cannot be recovered).</div>\r\n                <form className='PopForm' onSubmit={createUser}>\r\n                    <input className='AliasInput' required type='text' placeholder='Unique Alias' onChange={(e) => {\r\n                        setTempAlias(e.target.value);\r\n                    }}/><br/>\r\n                    <input className='PasswordInput' required type='password' placeholder='Create Password' onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                    }}/><br/>\r\n                    <button>Create Alias</button>\r\n                </form><br/>\r\n                <button className=\"PopSwitch\" onClick={openLogin}>Login with alias.</button>\r\n                <div className='Error'>{errorMessage}</div>\r\n            </div>}\r\n            \r\n            <div className={flexClass}>\r\n                <div className='ChatBox ContainerItem'>\r\n                    <div className='ChatHeader'>\r\n                        <div className='OnlineUsers'>\r\n                            <span className='OnlineBullet'>&#8226;</span> Active Users: {userCount}\r\n                        </div>\r\n                        <div className='CurrentAlias'>Alias: <span className='Alias'>{alias}</span> | </div>\r\n                        <button className='LogoutButton' disabled={!isLogin} onClick={logout}>Logout</button>\r\n                    </div>\r\n                    <div className='MessageBox'>\r\n                        <SimpleBar style={{height: \"100%\" }}>\r\n                            {messageLog.map((val) => {\r\n                                return <div>&lt;<span className='Alias'>{val.alias}</span>&gt; {val.message}</div>\r\n                            })}\r\n                            <div ref={messagesEndRef} />\r\n                        </SimpleBar>\r\n                    </div>\r\n                    <form className='MessageForm' onSubmit={sendMessage}>\r\n                        <input className='MessageInput' value={message} disabled={!isLogin} required type='text' placeholder='Message' onChange={(e) => {\r\n                            setMessage(e.target.value);\r\n                        }}/>\r\n                        <button className='SendButton' disabled={!isLogin}>Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    function useWindowSize() {\r\n        const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\r\n        useEffect(() => {\r\n          const handleResize = () => {\r\n            setSize([window.innerHeight, window.innerWidth]);\r\n          };\r\n          window.addEventListener(\"resize\", handleResize);\r\n          return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n          };\r\n        }, []);\r\n        return size;\r\n      }\r\n}\r\n\r\nexport default Chat;\r\n","import React, {useState} from 'react';\nimport AuthorizationPage from './AuthorizationPage'\nimport Chat from './Chat'\nimport './style/App.css';\n\nfunction App() {\n  let [currentWebsite, setCurrentWebsite] = useState('auth');\n\n  return (\n    <div className='App'>\n      {currentWebsite === 'auth' && <AuthorizationPage currentWebsite={currentWebsite} setCurrentWebsite={setCurrentWebsite} /> }\n      {currentWebsite === 'chat' && <Chat currentWebsite={currentWebsite} setCurrentWebsite={setCurrentWebsite}/>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}